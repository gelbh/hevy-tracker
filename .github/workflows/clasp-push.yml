name: Deploy to Apps Script

on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENSE"
      - "package*.json"
      - ".vscode/**"
  workflow_dispatch:
    inputs:
      deploy:
        description: "Create new deployment"
        type: boolean
        default: false
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SHOULD_DEPLOY: ${{ github.event.inputs.deploy == 'true' || contains(github.event.head_commit.message, '[deploy]') || contains(github.event.head_commit.message, '--deploy') || contains(github.env.GIT_PUSH_FLAGS, '--deploy') }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Configure clasp
        run: echo '${{ secrets.CLASPRC_JSON }}' > ~/.clasprc.json

      - name: Update API key constant
        run: sed -i 's/AUTHORIZED_API_KEY = ".*"/AUTHORIZED_API_KEY = "${{ secrets.AUTHORIZED_API_KEY }}"/' src/Constants.gs

      - name: Push to Apps Script
        run: clasp push --force

      - name: Create deployment
        if: env.SHOULD_DEPLOY == 'true'
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          DEPLOY_RESULT=$(clasp deploy --description "Production deployment $TIMESTAMP")
          DEPLOYMENT_ID=$(echo "$DEPLOY_RESULT" | grep -o 'AKfycb[a-zA-Z0-9_-]*')

          if [ -n "$DEPLOYMENT_ID" ]; then
            echo "Created deployment: $DEPLOYMENT_ID"
          else
            echo "Failed to extract deployment ID"
            exit 1
          fi
